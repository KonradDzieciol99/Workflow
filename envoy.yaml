admin:
  address:
    socket_address: { address: 0.0.0.0, port_value: 5081 }
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 5080 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          use_remote_address: true
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/chat/" }
                route: { prefix_rewrite: "/",cluster: chat }
              - match: { prefix: "/notification/" }
                route: { prefix_rewrite: "/",cluster: notification }
              - match: { prefix: "/photos/" }
                route: { prefix_rewrite: "/",cluster: photos }
              - match: { prefix: "/tasks/"}
                route: { prefix_rewrite: "/", cluster: tasks }
              - match: { prefix: "/aggregator/" }
                route: { prefix_rewrite: "/", cluster: api.aggregator }
              - match: { prefix: "/hub/" }
                route: 
                    cluster: signalr
                    upgrade_configs:
                        upgrade_type: "websocket"
                        enabled: true
              - match: { prefix: "/projects/" }
                route: { prefix_rewrite: "/",cluster: projects }
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
          access_log:
          - name: "envoy.access_loggers.stdout"    
            typed_config:
                "@type": "type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog"
                log_format:
                    json_format:
                      protocol: "%PROTOCOL%"
                      duration: "%DURATION%"
                      request_method: "%REQ(:METHOD)%"
                      original_path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                      new_path: "%REQ(:path)%"
                      status: "%RESPONSE_CODE%"
                      message: "%LOCAL_REPLY_BODY%"
                  # json_format:
                  #   time: "%START_TIME%"
                  #   protocol: "%PROTOCOL%"
                  #   duration: "%DURATION%"
                  #   request_method: "%REQ(:METHOD)%"
                  #   request_host: "%REQ(HOST)%"
                  #   path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                  #   response_flags: "%RESPONSE_FLAGS%"
                  #   route_name: "%ROUTE_NAME%"
                  #   upstream_host: "%UPSTREAM_HOST%"
                  #   upstream_cluster: "%UPSTREAM_CLUSTER%"
                  #   upstream_local_address: "%UPSTREAM_LOCAL_ADDRESS%"

  clusters:
  - name: projects
    connect_timeout: 10s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: projects
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: projects
                    port_value: 80
  - name: chat
    connect_timeout: 10s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: chat
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: chat
                    port_value: 80
  - name: notification
    connect_timeout: 10s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: notification
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: notification
                    port_value: 80
  - name: api.aggregator
    connect_timeout: 10s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: api.aggregator
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: api.aggregator
                    port_value: 80
  - name: tasks
    connect_timeout: 10s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: tasks
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: tasks
                    port_value: 80
  - name: photos
    connect_timeout: 10s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: photos
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: photos
                    port_value: 80
  - name: signalr
    connect_timeout: 10s
    type: strict_dns
    lb_policy: round_robin
    load_assignment:
      cluster_name: signalr
      endpoints:
        - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: signalr
                    port_value: 80



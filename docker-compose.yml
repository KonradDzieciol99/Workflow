version: '3.4'

services:

  sql_server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql_server
    ports:
    - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "Testpassword1!"

  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
  seq:
    image: datalust/seq:latest

  envoy:
    image: envoyproxy/envoy:v1.27-latest

  api.aggregator:
    image: ${DOCKER_REGISTRY-}apiaggregator
    build:
      context: .
      dockerfile: src/Aggregators/API.Aggregator/Dockerfile


  healthchecks:
    image: ${DOCKER_REGISTRY-}healthchecks
    build:
      context: .
      dockerfile: src/Aggregators/HealthChecks/Dockerfile


  tasks:
    image: ${DOCKER_REGISTRY-}tasks
    build:
      context: .
      dockerfile: src/Services/Tasks/Tasks/Dockerfile
    depends_on:
    - sql_server

  signalr:
    image: ${DOCKER_REGISTRY-}signalr
    build:
      context: .
      dockerfile: src/Services/SignalR/SignalR/Dockerfile
    depends_on:
    - redis

  projects:
    image: ${DOCKER_REGISTRY-}projects
    build:
      context: .
      dockerfile: src/Services/Projects/Projects/Dockerfile
    depends_on:
    - sql_server

  photos:
    image: ${DOCKER_REGISTRY-}photos
    build:
      context: .
      dockerfile: src/Services/Photos/Photos/Dockerfile


  notification:
    image: ${DOCKER_REGISTRY-}notification
    build:
      context: .
      dockerfile: src/Services/Notifications/Notification/Dockerfile
    depends_on:
    - sql_server

  identityduende:
    image: ${DOCKER_REGISTRY-}identityduende
    build:
      context: .
      dockerfile: src/Services/Identity/IdentityDuende/Dockerfile
    depends_on:
    - sql_server

  emailemitter:
    image: ${DOCKER_REGISTRY-}emailemitter
    build:
      context: .
      dockerfile: src/Services/Emails/EmailEmitter/Dockerfile


  chat:
    image: ${DOCKER_REGISTRY-}chat
    build:
      context: .
      dockerfile: src/Services/Chats/Chat/Dockerfile
    depends_on:
    - sql_server

  # angular:
  #   image: workflow-ui-image:latest
  #   build:
  #     context: C:\Users\konra\source\repos\WorkflowUI
  #     dockerfile: dockerfile


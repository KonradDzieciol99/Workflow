version: '3.4'

services:

  sql_server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql_server
    ports:
    - "1433:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "Testpassword1!"

  redis:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
  seq:
    image: datalust/seq:latest

  rabbitmq:
    image: rabbitmq:3-management

  healthchecks:
    image: ${DOCKER_REGISTRY-}healthchecks
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/Aggregators/HealthChecks/Dockerfile

  tasks:
    image: ${DOCKER_REGISTRY-}tasks
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/Services/Tasks/Tasks/Dockerfile
    depends_on:
    - sql_server
    - rabbitmq

  signalr:
    image: ${DOCKER_REGISTRY-}signalr
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/Services/SignalR/SignalR/Dockerfile
    depends_on:
    - redis
    - rabbitmq

  projects:
    image: ${DOCKER_REGISTRY-}projects
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/Services/Projects/Projects/Dockerfile
    depends_on:
    - sql_server
    - rabbitmq

  photos:
    image: ${DOCKER_REGISTRY-}photos
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/Services/Photos/Photos/Dockerfile
    depends_on:
    - rabbitmq

  notification:
    image: ${DOCKER_REGISTRY-}notification
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/Services/Notifications/Notification/Dockerfile
    depends_on:
    - sql_server
    - rabbitmq

  identityduende:
    image: ${DOCKER_REGISTRY-}identityduende
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/Services/Identity/IdentityDuende/Dockerfile
    depends_on:
    - sql_server
    - rabbitmq
   
  emailemitter:
    image: ${DOCKER_REGISTRY-}emailemitter
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/Services/Emails/EmailEmitter/Dockerfile
    depends_on:
     - rabbitmq

  chat:
    image: ${DOCKER_REGISTRY-}chat
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/Services/Chats/Chat/Dockerfile
    depends_on:
    - sql_server
    - rabbitmq

  yarpproxy:
    image: ${DOCKER_REGISTRY-}yarpproxy
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/Proxy/Yarp/YarpProxy/Dockerfile

  api.aggregator:
    image: ${DOCKER_REGISTRY-}apiaggregator
    restart: unless-stopped
    build:
      context: .
      dockerfile: src/Aggregators/Aggregator/API.Aggregator/Dockerfile

